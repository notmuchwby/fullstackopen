{"version":3,"sources":["components/display.js","components/filter.js","components/add.js","services/persons.js","components/notification.js","App.js","index.js"],"names":["DisplayPersons","persons","findPerson","removePerson","map","person","name","number","onClick","id","foundPeople","filter","toLowerCase","includes","FilterPersons","handleFindPerson","value","onChange","AddPersonsForm","addPerson","newName","newNumber","handleAddName","handleAddNumber","onSubmit","type","baseUrl","personService","getAll","axios","get","then","response","data","createPerson","newPerson","setNotificationMessage","request","post","setTimeout","deletePerson","delete","catch","error","changeNumber","setPersons","personToChange","find","changedPersons","put","Notification","message","notificationStye","color","backGround","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","useState","setNewName","setNewNumber","setFindPeson","notification","fetchPersons","useEffect","event","console","log","target","preventDefault","sameName","sameNumber","alert","window","confirm","returnedPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4fb64e4b.chunk.js","sourcesContent":["const DisplayPersons = ({persons, findPerson, removePerson}) => {\n    // Display all people if input field is empty\n    if(findPerson === '') {\n      return (\n        <div>\n          {persons.map(person => <p key={person.name}>{person.name} {person.number} \n          <button onClick={() => removePerson(person.id)}>delete</button></p>)}\n        </div>\n      )\n    }\n    // Displays people that have same characters in the list\n    else {\n      const foundPeople = persons.filter(person => person.name.toLowerCase().includes(findPerson.toLowerCase()))\n      return (\n        <div>\n         {foundPeople.map(person => <p key={person.name}>{person.name} {person.number}\n         <button onClick={() => removePerson(person.id)}>delete</button> </p>)}\n        </div>\n      )\n    }\n  }\n\n\nexport default DisplayPersons","const FilterPersons = ({persons, findPerson, handleFindPerson}) => {\n    return (\n      <div>\n        filter shown with<input persons={persons} value={findPerson} onChange={handleFindPerson}/>\n      </div>\n    )\n  }\n  \nexport default FilterPersons  ","const AddPersonsForm = ({addPerson, newName, newNumber, handleAddName, handleAddNumber}) => {\n    return (\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handleAddName}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleAddNumber}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>  \n    </form>\n    )\n  }\n\nexport default AddPersonsForm","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst createPerson = (newPerson, setNotificationMessage) => {\n    const request = axios.post(baseUrl, newPerson)\n    setNotificationMessage(`Added ${newPerson.name}`)\n    setTimeout(() => {\n        setNotificationMessage(null)\n    }, 5000)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id, setNotificationMessage) => {\n    axios.delete(`${baseUrl}/${id}`)\n    .catch(error => {\n       setNotificationMessage(\"This person has already been deleted\")\n    })\n}\n\nconst changeNumber = (id, persons, newNumber, setPersons, setNotificationMessage) => {\n    const personToChange = persons.find(person => person.id === id)\n    const changedPersons = {...personToChange, number: newNumber}\n\n    return axios.put(`${baseUrl}/${id}`, changedPersons)\n    .then(response => {\n        setPersons(persons.map(person => person.id !== id ? person : response.data))\n        setNotificationMessage('Phone number has been changed!')\n        setTimeout(() => {\n            setNotificationMessage(null)\n        }, 5000)\n    })\n    \n}\n\nconst personService = {getAll, createPerson, deletePerson, changeNumber}\nexport default personService","const Notification = ({message}) => {\n    const notificationStye = {\n        color: 'green',\n        backGround: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n\n    if(message === \"This person has already been deleted\") {\n        notificationStye.color = 'red'\n    }\n\n    if(message === null) {\n        return null\n    }\n\n    return (\n        <div style={notificationStye}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification ","import React, { useState, useEffect } from 'react'\nimport DisplayPersons from './components/display'\nimport FilterPersons from './components/filter'\nimport AddPersonsForm from './components/add'\nimport personService from './services/persons'\nimport Notification from './components/notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ findPerson, setFindPeson ] = useState('')\n  const [ notification, setNotificationMessage ] = useState(null)\n\n  const fetchPersons = () => {\n    personService.getAll().then(setPersons)\n  }\n\n  useEffect(fetchPersons, [])\n\n  const removePerson = (id) => {\n    if (window.confirm(\"Do you want to delete this person?\")) {\n      personService.deletePerson(id, setNotificationMessage)\n      fetchPersons()\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const sameName = persons.find(person => person.name === newName)\n    const sameNumber = persons.find(person => person.number === newNumber)\n\n    if (sameName && sameNumber) {\n      alert(\"The person with the same number already in the phonebook\")\n      return\n    }\n\n    if (sameName) {\n      if (window.confirm(`${sameName.name} is already added to the phonebook, want to replace the old number with the new one?`)) {\n        personService.changeNumber(sameName.id, persons, newNumber, setPersons, setNotificationMessage)\n          setNewName('');\n          setNewNumber('');\n      }\n      return\n    }\n\n    const newPerson = {\n      name: newName, \n      number: newNumber\n    }\n\n    personService.createPerson(newPerson, setNotificationMessage)\n    .then(returnedPerson => {\n      setPersons(persons.concat(returnedPerson))\n    })\n    setNewName('');\n    setNewNumber('');\n\n  }\n\n  const handleAddName = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleAddNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFindPerson = (event) => {\n    console.log(event.target.value)\n    setFindPeson(event.target.value)  \n  }\n\n\n  return (\n    <div>\n        <h2>Phonebook</h2>   \n        <Notification message={notification} />\n        <FilterPersons persons={persons} findPerson={findPerson} handleFindPerson={handleFindPerson} />\n\n        <h2>add a new</h2>\n        <AddPersonsForm addPerson={addPerson} newName={newName} newNumber={newNumber} \n        handleAddName={handleAddName} handleAddNumber={handleAddNumber}/>\n        \n        <h2>Numbers</h2>\n        <DisplayPersons persons={persons} findPerson={findPerson} removePerson={removePerson}/>\n    </div>\n  )\n}\n\nexport default App\n","\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}